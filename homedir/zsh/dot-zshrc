export LANG=en_US.UTF-8

# If environment is $CODESPACES = true we need to source zprofile
if [ -n "$CODESPACES" ]; then
  source ~/.zprofile
fi

# If this is Jetbrain reading the environment, we don't want to run the rest of the file
if [[ $INTELLIJ_ENVIRONMENT_READER ]]; then
  return
fi

alias grep='grep --color=auto'
alias ..='cd ..'
alias ...='cd ../..'
command -v lsd >> /dev/null && alias ls='lsd'
alias l='ls -l'
alias la='ls -a'
alias ll='ls -la'
alias lt='ls --tree'
alias ~='cd ~'

alias zrc="code ~/.zshrc"
alias zpr="code ~/.zprofile"

# Search in previous command with up/down
autoload -Uz up-line-or-beginning-search
autoload -Uz down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search
bindkey "^[[B" down-line-or-beginning-search

ZINIT_HOME="$HOME/.local/share/zinit/zinit.git"
ZSH_CUSTOM=~/.zsh/custom

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
   mkdir -p "$(dirname $ZINIT_HOME)"
   git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

source "${ZINIT_HOME}/zinit.zsh"

plugins=(
  "zsh-users/zsh-syntax-highlighting"
  "zsh-users/zsh-completions"
  "zsh-users/zsh-autosuggestions"
  "MichaelAquilina/zsh-you-should-use"
  "Aloxaf/fzf-tab"
)

# Add fzf-tab if fzf is installed
if [ -n "$(command -v fzf)" ]; then
  plugins+=("Aloxaf/fzf-tab")
fi

snippets=(
  "OMZP::sudo"
  "OMZP::profiles"
)

# Add tmux if it is installed
if [ -n "$(command -v tmux)" ]; then
  snippets+=("OMZP::tmux")
fi

for plugin in "${plugins[@]}"; do
  zinit ice wait lucid
  zinit light "$plugin"
done

for snippet in "${snippets[@]}"; do
  zinit ice wait lucid
  zinit snippet "$snippet"
done

# Completion loading
fpath+=~/.zfunc
autoload -Uz compinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
compinit -C

# Do not output folder of command 
command -v starship &> /dev/null && eval "$(starship init zsh)"
command -v fzf &> /dev/null && eval "$(fzf --zsh)"
command -v zoxide &> /dev/null && eval "$(zoxide init zsh)"
command -v gh &> /dev/null && eval "$(gh completion -s zsh)"
command -v gh &> /dev/null && gh copilot &> /dev/null && eval "$(gh copilot alias -- zsh)"
command -v uv >> /dev/null && eval "$(uv generate-shell-completion zsh)"
command -v uvx >> /dev/null && eval "$(uvx --generate-shell-completion zsh)"

# Check if $__CFBundleIdentifier environment variable contains the string 'jetbrains'
if [ "${__CFBundleIdentifier#*jetbrains}" != "$__CFBundleIdentifier" ]; then
  DISABLE_TMUX=true
fi

case $- in *i*)
  if [ -z "$TMUX" ] && [ -z "$DISABLE_TMUX" ] && [ -n "$(command -v tmux)" ]; then
    exec tmux
  fi
esac